# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: "Rust checks"

on:
  pull_request:
    paths:
      - "rs/**" # TODO: Add python/handlebarrz after fixing linker errors.
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/rust.yml"

jobs:
  check-build-test:
    name: Check, Build & Test (${{ matrix.toolchain }}, ${{ matrix.os_config.os }}-${{ matrix.os_config.arch }})
    runs-on: ${{ matrix.os_config.os }}
    strategy:
      fail-fast: false # Keep running other jobs even if one fails
      matrix:
        os_config:
          - { os: ubuntu-latest, arch: x64 }
          - { os: ubuntu-latest, arch: arm64 }
          - { os: macos-latest, arch: arm64 }
        toolchain: [stable, nightly]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Cargo registry and index
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.os_config.os }}-${{ matrix.os_config.arch }}-cargo-${{ matrix.toolchain }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Check code
        run: cargo check --all-targets --workspace
        # Allow nightly check to fail without failing the entire workflow
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}

      - name: Build code
        run: cargo build --all-targets --workspace
        # Allow nightly build to fail
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}

      - name: Run tests
        env:
          RUST_BACKTRACE: 1
        run: cargo test --all-targets --workspace
        # Allow nightly tests to fail
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}

  #check-build-test-musl-matrix:
  #  name: Check, Build & Test (${{ matrix.toolchain }}, alpine-${{ matrix.arch }}-musl)
  #  runs-on: ubuntu-latest # Runner OS
  #  container: # Run steps inside this container
  #    image: rust:alpine # Use official Rust image based on Alpine (multi-arch)
  #  strategy:
  #    fail-fast: false
  #    matrix:
  #      include:
  #        - arch: x86_64
  #          target: x86_64-unknown-linux-musl
  #        - arch: aarch64
  #          target: aarch64-unknown-linux-musl
  #      toolchain: [stable, nightly]
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v4

  #    - name: Install musl build dependencies
  #      run: |
  #        # Install native gcc, bash, docker-cli
  #        apk add --no-cache musl-dev gcc bash docker-cli

  #    - name: Set up QEMU
  #      uses: docker/setup-qemu-action@v3

  #    - name: Install Rust toolchain (${{ matrix.toolchain }}) via rustup
  #      shell: bash
  #      run: |
  #        echo "Installing toolchain: ${{ matrix.toolchain }} and target: ${{ matrix.target }}"
  #        rustup toolchain install ${{ matrix.toolchain }} --profile minimal --target ${{ matrix.target }}
  #        rustup default ${{ matrix.toolchain }}

  #        echo "Rust toolchain info:"
  #        rustc --version --verbose
  #        cargo --version --verbose

  #    - name: Cache Cargo registry and index (musl)
  #      uses: actions/cache@v4
  #      with:
  #        path: |
  #          /usr/local/cargo/registry/index/
  #          /usr/local/cargo/registry/cache/
  #          /usr/local/cargo/git/db/
  #          target/
  #        # Include architecture and toolchain in cache key
  #        key: linux-musl-${{ matrix.arch }}-cargo-${{ matrix.toolchain }}-${{ hashFiles('**/Cargo.lock') }}

  #    - name: Check code (musl, ${{ matrix.arch }}, ${{ matrix.toolchain }})
  #      shell: bash
  #      run: cargo check --all-targets --workspace --target ${{ matrix.target }}
  #      # Allow nightly check to fail
  #      continue-on-error: ${{ matrix.toolchain == 'nightly' }}

  #    - name: Build code (musl, ${{ matrix.arch }}, ${{ matrix.toolchain }})
  #      shell: bash
  #      run: cargo build --all-targets --workspace --target ${{ matrix.target }}
  #      # Allow nightly build to fail
  #      continue-on-error: ${{ matrix.toolchain == 'nightly' }}

  #    - name: Run tests (musl, ${{ matrix.arch }}, ${{ matrix.toolchain }})
  #      shell: bash
  #      env:
  #        RUST_BACKTRACE: 1 # Keep the backtrace env var
  #      run: cargo test --all-targets --workspace --target ${{ matrix.target }}
  #      # Allow nightly tests to fail
  #      continue-on-error: ${{ matrix.toolchain == 'nightly' }}
