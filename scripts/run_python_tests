#!/usr/bin/env bash
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

set -euo pipefail

TOP_DIR=$(git rev-parse --show-toplevel)
PYTHON_DIR="${TOP_DIR}/python"
PYTHON_VERSIONS=(
  "python3.12"
  "python3.13"
  # TODO: Wait for https://github.com/PyO3/pyo3/issues/5000 to be fixed.
  #"python3.14" # Next version to catch breakages early.
)

echo "=== Running Python tests ==="
echo "Project root: ${TOP_DIR}"
echo "Python directory: ${PYTHON_DIR}"
echo ""

# WORKAROUND:
#
# error: the configured Python interpreter version (3.14) is newer than PyO3's
# maximum supported version (3.13)
#
#  = help: please check if an updated version of PyO3 is available. Current
#  version: 0.24.0
#  = help: set PYO3_USE_ABI3_FORWARD_COMPATIBILITY=1 to suppress this check and
#  build anyway using the stable ABI
export PYO3_USE_ABI3_FORWARD_COMPATIBILITY=1

pushd "${PYTHON_DIR}"
for VERSION in "${PYTHON_VERSIONS[@]}"; do
  # NOTE: Build the Rust extension for a specific Python version in an isolated
  # virtual environment; otherwise we see weird missing import errors.
  echo "Creating virtual environment for ${VERSION}..."
  uv venv --python "${VERSION}"
  uv run --python "${VERSION}" --active --directory handlebarrz maturin develop
  echo "Running tests with Python ${VERSION}..."
  uv run \
    --python "${VERSION}" \
    --active \
    pytest -vv --log-level=DEBUG .
  echo "Cleaning up virtual environment for ${VERSION}..."
  rm -rf .venv
done
popd

echo "=== Python tests completed ==="

exit $?
